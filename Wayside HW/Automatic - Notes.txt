Automatic mode using Raspberry Pi (RPI):
-RPI creates lists for all blocks and triples involved in switches using the same "readTrackFile()" function used on the main system (For this, place copy of green line *.csv, "Block.py", and "readTrackFile.py" in a specified folder on RPI)
	-Essentially, the same lists exist on both the RPI and the main system

Upon receiving a list of occupancies from the track model:
-Send the list of occupancies to the mode handler function (Not yet implemented, but will simply act as a "hallway" to handle the occupancies correctly)
	-If the mode is 0 (automatic), send the occupancies to the automatic mode function
	-If the mode is 1 (manual), send the occupancies to the manual mode function
		-Also display occupancies and send occupancies to the CTC office within this function

If in automatic operation:
-Call the automatic mode function, with the occupancies list as the argument
-Create and send a list of occupied block IDs as a list of strings serially to RPI (Look-into libraries that specialize in sending strings over serial communication)
-Upon receiving list of occupied IDs on RPI, iterate through all blocks and triples lists and set blocks with those IDs as occupied; otherwise, make sure the block is set to unoccupied (Don't do nothing, as blocks must be reset from last iteration)
-Create a new parser object every time, given the new occupancies
-Call the function responsible for parsing the PLC file, and return a list of altered output blocks
-Determine code for sending back a list of changed block IDs as well as which block attribute was changed
	-Ex.) If block A1's light was changed to RED, and block C12's switch was changed to RIGHT, returned string
	could be: ['A1', 'RE', 'C12', 'RI'], etc.
		-Or, since each green line block only has one attribute, code could be: ["A1", "0", "C12", "0"];
		since the block only has a single editable attribute, we know which attribute was changed
-This list of strings is communicated serially to the main system, and the changed attributes are applied and sent to the track model